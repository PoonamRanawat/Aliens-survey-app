{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/app.bootstrap.js","app/app.ui-router.js","app/components/admin/adminCtrl.js","app/components/admin/index.js","app/components/admin/users/index.js","app/components/admin/users/usersCtrl.js","app/components/index.js","app/components/login/index.js","app/components/login/loginCtrl.js","app/components/main/index.js","app/components/main/mainCtrl.js","app/components/user/index.js","app/components/user/route.js","app/components/user/user-controller.js","app/main.js","app/shared/constants/appConstant.js","app/shared/index.js","app/shared/services/authInterceptor.js","app/shared/services/authenticationSvc.js","app/shared/services/userSvc.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","$rootScope","$state","$auth","isOpen","pinPages","tosterConfig","time-out","position-class","close-button","$on","isAuthenticated","go","$stateProvider","$httpProvider","appConstant","$authProvider","$locationProvider","hashPrefix","httpInterceptor","tokenHeader","tokenType","interceptors","push","state","abstract","templateUrl","controller","url","$scope","authenticationSvc","logout","then","response","console","log","status_code","success","removeToken","localStorage","removeItem","message","catch","angular","$timeout","userSvc","validateDataEntered","dataEntered","newpassword","flag","name","email","company","password","addUser","data","dataGetService","element","modal","userlist","created_at","updated_at","user_type","status","survey_count","userService","updateUser","errors","loggedInPersonName","getItem","textsearch","dataToEdit","dataToEditNew","getUserData","listdata","on","this","find","val","end","document","keypress","event","which","preventDefault","addEmployees","closeForm","editData","getEditData","id","deleteUser","userTodelete","delete","updateEmployees","filterFunction","match","RegExp","refresh","refreshData","grant_type","refresh_token","client_id","client_secret","access","setItem","expires_in","expiry","JSON","parse","setInterval","onSuccess","tokenDetails","setToken","token_type","access_token","userName","userType","onError","login","username","config","controllerAs","ncyBreadcrumb","label","run","App","constant","apiPath","apiPathServer","factory","$q","responseError","$broadcast","reject","$http","deferred","defer","post","result","resolve","error","promise","get","put"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = ['$rootScope', '$state','$auth',\r\n    function ($rootScope, $state, $auth) {\r\n        $rootScope.isOpen = false;\r\n        $rootScope.pinPages = {};\r\n        $rootScope.tosterConfig = {'time-out': 10000,'position-class': 'toast-top-center','close-button':true};\r\n\r\n        $rootScope.$on('$locationChangeSuccess', function() {\r\n            if(!$auth.isAuthenticated()) {\r\n                $state.go('main.login');\r\n            }\r\n        });\r\n        $state.go('main.login');\r\n    }];","module.exports = ['$stateProvider', '$httpProvider', 'appConstant', '$authProvider', '$locationProvider',\r\n    function ($stateProvider, $httpProvider,appConstant, $authProvider, $locationProvider) {\r\n        $locationProvider.hashPrefix('');\r\n        $authProvider.httpInterceptor = function () {\r\n            return true;\r\n        },\r\n\r\n        $authProvider.tokenHeader = 'Authorization';\r\n        $authProvider.tokenType = '';\r\n        //$translateProvider.useCookieStorage().useLoader('asyncLoader').useLocalStorage().useMissingTranslationHandlerLog().useSanitizeValueStrategy('sanitize');\r\n        $httpProvider.interceptors.push('authInterceptor');\r\n        $stateProvider\r\n            .state('main', {\r\n                abstract: true,\r\n                templateUrl: './app/components/main/main-view.html',\r\n                controller: \"mainCtrl\"\r\n            })\r\n            .state(\"main.login\", {\r\n                url: \"/login\",\r\n                templateUrl: \"./app/components/login/login.html\",\r\n                controller: \"loginCtrl\"\r\n            })\r\n            .state(\"admin\", {\r\n                abstract: true,\r\n                templateUrl: \"./app/components/admin/main.html\",\r\n                controller: \"adminCtrl\"\r\n            })\r\n            .state(\"admin.users\", {\r\n                url: \"/admin/users\",\r\n                templateUrl: \"./app/components/admin/users/users.html\",\r\n                controller: \"usersCtrl\"\r\n            });\r\n    }];","'use strict';\r\nmodule.exports = ['$scope', 'authenticationSvc', '$auth', '$state', function ($scope, authenticationSvc, $auth, $state) {\r\n    $scope.logout = function () {\r\n        authenticationSvc.logout().then(function (response) {\r\n            console.log(response);\r\n            if(response.status_code == 200 && response.success){\r\n                $auth.removeToken();\r\n                localStorage.removeItem(\"expiry_time\");\r\n                localStorage.removeItem(\"expiry_time\");\r\n                localStorage.removeItem(\"loggedInPersonName\");\r\n                localStorage.removeItem(\"userData\");\r\n                $state.go('main.login');\r\n                return response;\r\n            } else if(!response.success && response.message == 'Unathenticated'){\r\n                $state.go('main.login');\r\n            }\r\n        }).catch(function (response) {\r\n            console.log(response);\r\n        });\r\n    };\r\n}];\r\n","module.exports = angular.module('components.admin', [])\r\n    .controller('adminCtrl', require('./adminCtrl.js'));","module.exports = angular.module('components.admin.users', [])\r\n    .controller('usersCtrl', require('./usersCtrl.js'));","'use strict';\r\nmodule.exports = ['$scope', '$rootScope', '$timeout','userSvc', function ($scope, $rootScope, $timeout, userSvc) {\r\n    $rootScope.loggedInPersonName =localStorage.getItem(\"loggedInPersonName\");\r\n    $scope.textsearch = \"\";\r\n    $scope.dataEntered= \"\";\r\n    $scope.dataToEdit= \"\";\r\n    $rootScope.dataToEditNew = '';\r\n\r\n    var userlist = function() {\r\n        userSvc.getUserData().then(function (response) {\r\n            $rootScope.listdata = response.data;\r\n        });\r\n    };\r\n\r\n    $scope.addUser = function () {\r\n        angular.element(\".modal\").on(\"hidden.bs.modal\", function () {\r\n            angular.element(this).find(\"input,textarea,select\").val('').end();\r\n        });\r\n        angular.element(\"#addForm\").find(\"input,textarea,select\").val('').end();\r\n    };\r\n\r\n    //Function to prevent enter key press on search - start\r\n    angular.element(document).keypress( function(event){\r\n        if (event.which == '13') { event.preventDefault();}\r\n    });\r\n\r\n    userlist();\r\n    //Function to get userlist - end\r\n\r\n    $scope.addEmployees = function (dataEntered) {\r\n        if (typeof dataEntered == 'undefined' || dataEntered == null) {\r\n            $timeout(function () {\r\n                //dataGetService.errors('Please enter data', 1500);\r\n            },500);\r\n        } else {\r\n            validateDataEntered(dataEntered, null, true);\r\n        }\r\n    };\r\n\r\n    //Function to validate the data that user enters while add/edit - start\r\n    function validateDataEntered(dataEntered,newpassword ,flag){\r\n        if (!dataEntered.name) {\r\n            $timeout(function () {\r\n                dataGetService.errors('Please enter Name', 1500);\r\n            },500);\r\n            return;\r\n        }\r\n        else if (!dataEntered.email) {\r\n            $timeout(function () {\r\n                dataGetService.errors('Please enter valid Email', 1500);\r\n            },500);\r\n            return;\r\n        }\r\n        else if (!dataEntered.company) {\r\n            $timeout(function () {\r\n                dataGetService.errors('Please enter Company', 1500);\r\n            },500);\r\n            return;\r\n        }\r\n        else if(flag == true ){\r\n            if(!dataEntered.password) {\r\n                $timeout(function () {\r\n                    dataGetService.errors('Please enter Password', 1500);\r\n                }, 500);\r\n                return;\r\n            }\r\n        }\r\n        if(flag == true){\r\n            userSvc.addUser(dataEntered).then(function (response) {\r\n                if(response.data.success && response.data.status_code == 200){\r\n                    $timeout(function () {\r\n                        dataGetService.success('User added successfully', 1500);\r\n                    },200);\r\n                    angular.element('#addUserForm').modal('hide');\r\n                    userlist();\r\n                }\r\n            });\r\n        } else if( flag == false){\r\n            delete dataEntered.created_at;\r\n            delete dataEntered.updated_at;\r\n            delete dataEntered.user_type;\r\n            delete dataEntered.status;\r\n            delete dataEntered.survey_count;\r\n            if(newpassword){\r\n                dataEntered ['password'] = newpassword;\r\n                delete dataEntered.newpassword;\r\n            } else {\r\n                dataEntered ['password'] = '';\r\n            }\r\n            userService.updateUser(dataEntered).then(function (response) {\r\n                $timeout(function () {\r\n                    dataGetService.success('User updated successfully', 1500);\r\n                },200);\r\n                angular.element('#editUserModal').modal('hide');\r\n                userlist();\r\n            });\r\n        }\r\n\r\n    }\r\n    //Function to validate the data that user enters while add/edit - end\r\n\r\n    //Function to close modals - start\r\n    $scope.closeForm = function () {\r\n        angular.element('#addUserForm.modal').on('hidden.bs.modal', function () {\r\n            angular.element(this).find(\"input,textarea,select\").val('').end();\r\n        });\r\n        angular.element('#addUserForm').modal('hide');\r\n    };\r\n    //Function to close modals - end\r\n\r\n    //Function to get edit data - start\r\n    $scope.editData = function(data) {\r\n        //$scope.dataToEdit = CommonService.getData();\r\n        userSvc.getEditData(data.id).then(function (response) {\r\n            if(response.data.success){\r\n                $rootScope.dataToEditNew = response.data.data;\r\n            }\r\n        });\r\n    };\r\n    //Function to get edit data - end\r\n\r\n\r\n    $scope.deleteUser = function (data) {\r\n        $rootScope.userTodelete = data.id;\r\n    }\r\n\r\n    //delete user - start\r\n    $scope.delete = function (data) {\r\n        userSvc.deleteUser(data).then(function (response) {\r\n            if(response.data.success){\r\n                $timeout(function () {\r\n                    dataGetService.success('User deleted successfully', 1500);\r\n                },200);\r\n                angular.element('#myDeleteModal').modal('hide');\r\n                userlist();\r\n            }\r\n            return response.data;\r\n        })\r\n    };\r\n    //delete user - end\r\n\r\n    //update data - start\r\n    $scope.updateEmployees = function (dataToEdit) {\r\n        if (typeof dataToEdit == 'undefined' || dataToEdit == null) {\r\n            $timeout(function () {\r\n                dataGetService.errors('Please enter data', 5000);\r\n            },50);\r\n        } else {\r\n            delete dataToEdit.password;\r\n            validateDataEntered(dataToEdit,dataToEdit.newpassword, false);\r\n        }\r\n        angular.element('#editUserModal').on('hidden.bs.modal', function () {\r\n            angular.element(this).find(\"input,textarea,select\").val('').end();\r\n        });\r\n    };\r\n    //update data - end\r\n\r\n    //Function to filter name and city from listing - start\r\n    $scope.filterFunction = function (element) {\r\n        if (element.name.match(new RegExp(\"(\" + $scope.textsearch + \")\", \"i\")) ? true : false || element.email.match(new RegExp(\"(\" + $scope.textsearch + \")\", \"i\")) ? true : false) {\r\n            return element;\r\n        }\r\n    };\r\n    //Function to filter name and city from listing - end\r\n}];\r\n","module.exports = angular.module('components', [\r\n    require('./main').name,\r\n    require('./user').name,\r\n    require('./login').name,\r\n    require('./admin').name,\r\n    require('./admin/users').name,\r\n]);\r\n","module.exports = angular.module('components.login', [])\r\n    .controller('loginCtrl', require('./loginCtrl.js'));\r\n","'use strict';\r\nmodule.exports = ['$scope', '$auth', '$rootScope', '$state', 'authenticationSvc', 'appConstant',\r\n    function ($scope, $auth, $rootScope, $state,authenticationSvc, appConstant) {\r\n\r\n    var refresh = function() {\r\n        $scope.refreshData = {\r\n            grant_type : 'refresh_token',\r\n            refresh_token : localStorage.getItem(\"refresh_token\"),\r\n            client_id : appConstant.client_id,\r\n            client_secret : appConstant.client_secret,\r\n        };\r\n        $scope.access = authenticationSvc.refresh($scope.refreshData).then(function (response) {\r\n            if(response.status_code == 200 && response.success){\r\n                localStorage.setItem(\"expiry_time\",response.data.expires_in);\r\n                var expiry = JSON.parse(localStorage.getItem(\"expiry_time\"));\r\n                localStorage.setItem('refresh_token',response.data.refresh_token);\r\n                setInterval(function(){refresh()},expiry * 1000);\r\n            } else if(!response.success && response.message == 'Unathenticated'){\r\n                $state.log('main.login');\r\n            }\r\n        });\r\n    };\r\n\r\n    var onSuccess = function (response) {\r\n        localStorage.setItem(\"expiry_time\", response.data.tokenDetails.expires_in);\r\n        localStorage.setItem('refresh_token',response.data.tokenDetails.refresh_token);\r\n        var expiry = JSON.parse(localStorage.getItem(\"expiry_time\"));\r\n        $auth.removeToken();\r\n        $auth.setToken(response.data.tokenDetails.token_type+\" \"+response.data.tokenDetails.access_token);\r\n        setInterval(function(){refresh()},expiry * 1000);\r\n        $rootScope.loggedInPersonName = response.data.userName;\r\n        localStorage.setItem('loggedInPersonName',response.data.userName);\r\n       if(response.data.userType == 'admin' ){\r\n           $state.go('admin.users');\r\n        } else if(response.data.userType == 'customer'){\r\n           console.log(\"redirect to customer\");\r\n            //$state.log('main.login');\r\n        }\r\n    };\r\n\r\n    var onError = function (response) {\r\n        console.log(response);\r\n        console.log(response.errors.message);\r\n    };\r\n\r\n    $scope.login = function () {\r\n        $scope.data = {\r\n            username : $scope.username,\r\n            password : $scope.password,\r\n            grant_type : appConstant.grant_type,\r\n            client_id : appConstant.client_id,\r\n            client_secret : appConstant.client_secret,\r\n            refresh_token : null\r\n        };\r\n        $scope.access = authenticationSvc.login($scope.data).then(onSuccess).catch(onError);\r\n    };\r\n}];\r\n","module.exports = angular.module('components.main', [])\r\n    .controller('mainCtrl', require('./mainCtrl.js'));","'use strict';\r\nmodule.exports = ['$scope',function ($scope) {\r\n\r\n}];\r\n","module.exports = angular.module('components.user', [])\r\n    .controller('userController', require('./user-controller'))\r\n    .config(require('./route.js'));","module.exports = ['$stateProvider', function ($stateProvider) {\r\n    $stateProvider.state(\"main.user\", {\r\n        url: \"/user\",\r\n        templateUrl: \"./app/components/user/user.html\",\r\n        controller: \"userController\",\r\n        controllerAs: \"vm\",\r\n        ncyBreadcrumb: {\r\n            label: '{{vm.mainPageTitle}}'\r\n        }\r\n    });\r\n}];","'use strict';\r\nmodule.exports = ['$scope',\r\n    function ($scope) {\r\n    console.log(\"change\");\r\n}];","'use strict';\r\n\"use strict\";\r\n\r\nangular.module('aliensSurveyApp', [\r\n    'ui.router',\r\n    'satellizer',\r\n    'ngAnimate',\r\n    'toaster',\r\n    'ngSanitize',\r\n    'naif.base64',\r\n    require('./components').name,\r\n    require('./shared').name\r\n])\r\n    .config(require('./app.ui-router'))\r\n    .config(['$locationProvider', function($locationProvider) {\r\n        $locationProvider.hashPrefix('');\r\n    }])\r\n    .run( require('./app.bootstrap'));\r\n\r\n","'use strict';\r\nvar App = angular.module('shared.appConstant', []);\r\nApp.constant('appConstant', {\r\n    apiPath : \"./api/\",\r\n    apiPathServer : \"http://aliens.dev.easternenterprise.com/api/\",\r\n    grant_type: 'password',\r\n    client_id:2,\r\n    client_secret: 'zweSbThZRtujlkrqA5uogn3Zn30Htzl6y9IDT1YM'\r\n});\r\nmodule.exports = App;\r\n","module.exports = angular.module('shared', [\r\n    require('./services/authInterceptor.js').name,\r\n    require('./services/authenticationSvc.js').name,\r\n    require('./services/userSvc.js').name,\r\n    require('./constants/appConstant.js').name,\r\n]);\r\n","'use stict';\r\n\r\nvar App = angular.module('shared.authInterceptor', []);\r\nApp.factory('authInterceptor', [\r\n    '$rootScope', '$q',\r\n    function($rootScope, $q) {\r\n        return {\r\n            // Intercept 401s and redirect you to login\r\n            responseError: function(response) {\r\n                if (response.status === 401) {\r\n                    $rootScope.$broadcast('auth.request.error');\r\n                    return $q.reject(response);\r\n                } else {\r\n                    return $q.reject(response);\r\n                }\r\n            }\r\n        };\r\n    }\r\n]);\r\nmodule.exports = App;","'use strict';\r\nvar App = angular.module('shared.auth', []);\r\n\r\nApp.factory('authenticationSvc', ['$http', '$q','$rootScope','appConstant',\r\n    function ($http, $q,  $rootScope, appConstant) {\r\n\r\n    function login(data) {\r\n        var url = appConstant.apiPathServer+'login';\r\n        var deferred = $q.defer();\r\n\r\n        $http.post(url, data).then(function (result) {\r\n            deferred.resolve(result.data);\r\n        }, function (error) {\r\n            deferred.reject(error.data);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    function refresh(data) {\r\n        var url = appConstant.apiPathServer+'refreshToken';\r\n        var deferred = $q.defer();\r\n\r\n        $http.post(url, data).then(function (result) {\r\n            deferred.resolve(result.data);\r\n        }, function (error) {\r\n            deferred.reject(error.data);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    function logout() {\r\n        var url = appConstant.apiPathServer+'logout';\r\n        var deferred = $q.defer();\r\n\r\n        $http.post(url).then(function (result) {\r\n            deferred.resolve(result.data);\r\n        }, function (error) {\r\n            deferred.reject(error.data);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    return {\r\n        login: login,\r\n        refresh: refresh,\r\n        logout:logout\r\n    };\r\n}]);\r\nmodule.exports = App;","'use strict';\r\nvar App = angular.module('shared.userSvc', []);\r\n\r\nApp.factory('userSvc', ['$http', '$q','$rootScope','appConstant',\r\n    function ($http, $q,  $rootScope, appConstant) {\r\n        function getUserData() {\r\n            var url = appConstant.apiPathServer+'users/List';\r\n            var deferred = $q.defer();\r\n\r\n            $http.get(url).then(function (result) {\r\n                deferred.resolve(result.data);\r\n            }, function (error) {\r\n                deferred.reject(error.data);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        function addUser(data) {\r\n            var url = appConstant.apiPathServer+'users/create';\r\n            var deferred = $q.defer();\r\n\r\n            $http.post(url, data).then(function (result) {\r\n                deferred.resolve(result);\r\n            }, function (error) {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        function updateUser(data) {\r\n            var url = appConstant.apiPathServer+'users/update';\r\n            var deferred = $q.defer();\r\n\r\n            $http.put(url, data).then(function (result) {\r\n                deferred.resolve(result);\r\n            }, function (error) {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        function deleteUser(data){\r\n            var url = appConstant.apiPathServer+'users/delete?id='+data;\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete(url).then(function (result) {\r\n                deferred.resolve(result);\r\n            }, function (error) {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        function getEditData(data) {\r\n            var url = appConstant.apiPathServer+'users/edit?user_id='+data;\r\n            var deferred = $q.defer();\r\n\r\n            $http.get(url).then(function (result) {\r\n                deferred.resolve(result);\r\n            }, function (error) {\r\n                deferred.reject(error);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n\r\n        return {\r\n            getUserData : getUserData,\r\n            addUser : addUser,\r\n            updateUser : updateUser,\r\n            deleteUser : deleteUser,\r\n            getEditData : getEditData\r\n        };\r\n    }]);\r\nmodule.exports = App;"]}